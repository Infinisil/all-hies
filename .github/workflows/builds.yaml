name: CI
on: 
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    name: HIE Build for ${{ matrix.os }}, GHC ${{ matrix.ghc }}, glibc ${{ matrix.glibc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        ghc: [ "8.8.3" ]
        #ghc: [ "8.6.5", "8.8.3" ]
        glibc: [ "2.30" ]
        #glibc: [ "2.27", "2.30" ]
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v10
    - uses: cachix/cachix-action@09c0620ab018415cbf1e6792e1f415cf892879b5
      with:
        name: all-hies
        extraPullNames: iohk
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - name: Make sure materializations are up-to-date
      run: |
        nix-build ci.nix -A materialize --argstr ghcVersion ${{ matrix.ghc }} --argstr glibcVersion ${{ matrix.glibc }}
        ./result
        # Fails if there are any changes
        if ! [[ -z "$(git status --porcelain)" ]]; then
          echo "The materialization script made some changes:" >&2
          git status
          echo "Run \$(nix-build ci.nix -A materializeScript) to apply them" >&2
          exit 1
        fi
        echo "Materialization files up-to-date" >&2
    - name: Build HIE
      run: |
        drv=$(nix-instantiate ci.nix -A combined --argstr ghcVersion ${{ matrix.ghc }} --argstr glibcVersion ${{ matrix.glibc }})
        path=$(nix-store --query --outputs "$drv")
        url=$(sed -r <<< "$path" \
          -e 's|-.*|.narinfo|' \
          -e 's|/nix/store|https://all-hies.cachix.org|')
        code=$(curl -s -o /dev/null -w "%{http_code}\n" "$url")
        case "$code" in
          200)
            echo "Derivation already in cache, not building it"
            ;;
          *)
            echo "Derivation not in cache, building it"
            nix-store -r "$path"
            ;;
        esac

  template_haskell-nix:
    name: Haskell.nix template for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    defaults:
      run:
        working-directory: templates/haskell.nix
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v10
    - uses: cachix/cachix-action@09c0620ab018415cbf1e6792e1f415cf892879b5
      with:
        name: all-hies
        extraPullNames: iohk
    - name: Entering nix-shell
      run: |
        nix-shell --run "echo Successfully entered nix-shell"
    - name: Call HIE
      run: |
        nix-shell --run "hie"
    - name: Search hoogle
      run: |
        nix-shell --run "hoogle fromMaybe" | grep Data.Maybe
    - name: Build and run with cabal
      run: |
        nix-shell --run "cabal run"
    - name: Build and run with Nix
      run: |
        nix-build
        ./result/bin/all-hies-template

  template_nixpkgs-infra:
    name: Nixpkgs infra template for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    defaults:
      run:
        working-directory: templates/nixpkgs-infra
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v10
    - uses: cachix/cachix-action@09c0620ab018415cbf1e6792e1f415cf892879b5
      with:
        name: all-hies
    - name: Entering nix-shell
      run: |
        nix-shell --run "echo Successfully entered nix-shell"
    - name: Call HIE
      run: |
        nix-shell --run "hie"
    - name: Search hoogle
      run: |
        nix-shell --run "hoogle fromMaybe" | grep Data.Maybe
    - name: Build and run with cabal
      run: |
        nix-shell --run "cabal run"
    - name: Build and run with Nix
      run: |
        nix-build
        ./result/bin/all-hies-template
